{"ast":null,"code":"var _jsxFileName = \"/home/srikar/Desktop/Projects/Memories/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './styles';\nconst Form = () => {\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags\n  });\n  const classes = useStyles();\n  const handleSubmit = () => {};\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({\n      ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({\n      ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({\n      ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({\n      ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 52\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useStyles","Form","postData","setPostData","creator","title","message","tags","classes","handleSubmit","createElement","className","paper","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","noValidate","root","form","onSubmit","variant","currentId","post","name","label","fullWidth","value","onChange","e","target","multiline","rows","split","fileInput","FileBase","type","multiple","onDone","base64","selectedFile","buttonSubmit","color","size","onClick","clear"],"sources":["/home/srikar/Desktop/Projects/Memories/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './styles';\n\nconst Form = () =>{\n    const [postData,setPostData] = useState({\n        creator:'',title:'',message:'',tags\n    });\n    const classes = useStyles();\n\n    const handleSubmit = () =>{\n\n    }\n\n    return(\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n        </form>\n    </Paper>\n    );\n} \n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}